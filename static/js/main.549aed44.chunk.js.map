{"version":3,"sources":["tableRender.js","App.js","reportWebVitals.js","index.js"],"names":["TableRender","props","id","experienceValidation","experience","age","hasChildrenContent","children","states","stateName","stateShortName","split","map","licenseState","stateList","find","element","name","undefined","state","abbreviation","dublicateFinder","phone","email","index","duplicatePhone","file","findIndex","data","duplicateEmail","toLowerCase","className","Object","keys","person","key","Number","isInteger","trim","length","parseFloat","replace","income","Math","round","toFixed","licDate","match","Date","parse","now","licNumber","App","useState","setFile","uploadingStatus","setUploadingStatus","isModalVisible","setIsModalVisible","handleCsvFile","console","log","some","title","visible","onOk","onCancel","config","header","skipEmptyLines","onDrop","onError","err","addRemoveButton","removeButtonColor","onRemoveFile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549aed44.chunk.js","sourcesContent":["import stateList from './stateList';\r\n\r\nlet TableRender = (props) => {\r\n    let id = 0;\r\n\r\n    let ageValidation = (age) => {\r\n        if (Number.isInteger(age) && age >= 21) {\r\n            return 'normalCell'\r\n        }else{\r\n            return 'redCell'\r\n        }\r\n    };\r\n\r\n    let experienceValidation = (experience, age) => {\r\n        if (experience >= 0 && experience < age) {\r\n            return 'normalCell'\r\n        }else{\r\n            return 'redCell'\r\n        }\r\n    };\r\n\r\n    let incomeValidation = (income) => {\r\n        if (income <= 1000000 && income > 0) {\r\n            return 'normalCell'\r\n        }else{\r\n            return 'redCell'\r\n        }\r\n    };\r\n\r\n    let licDateValidation = (licDate) => {\r\n        if (licDate.match(/^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$|^\\d{4}[\\-](0?[1-9]|1[0-2])[\\-](0?[1-9]|[1-2][0-9]|3[01])$/) && Date.parse(licDate) > Date.now()) {\r\n            return 'normalCell'\r\n        }else{\r\n            return 'redCell'\r\n        }\r\n    };\r\n\r\n    let hasChildrenContent = (children) => {\r\n        if (children === '') {\r\n            return 'FALSE'\r\n        }else{\r\n            return children\r\n        }\r\n    };\r\n\r\n    let hasChildrenValidation = (children) => {\r\n        if (children === 'TRUE' || children === 'FALSE' || children === '') {\r\n            return 'normalCell'\r\n        }else{\r\n            return 'redCell'\r\n        }\r\n    };\r\n\r\n    let licNumberValidation = (licNumber) => {\r\n        if (licNumber.match(/^\\w{6}$/)) {\r\n            return 'normalCell'\r\n        }else{\r\n            return 'redCell'\r\n        }\r\n    };\r\n\r\n    let tableStyle = (key) => {\r\n        if (Number.isInteger( key / 2 )) {\r\n            return 'grey'\r\n        }else{\r\n            return 'white'\r\n        }\r\n    };\r\n\r\n    let phoneFormat = (phone) => {\r\n        if (phone.length === 10) {\r\n            return ('+1' + phone)\r\n        }else{\r\n            if (phone.length === 11) {\r\n                return ('+' + phone)\r\n            }else{\r\n                return (phone)\r\n            }\r\n        }\r\n    };\r\n\r\n    let states = (stateName) => {\r\n        let stateShortName = stateName.split(/(?:,| )+/).map(licenseState => stateList.find(element => element.name === licenseState));\r\n\r\n        if (stateShortName[0] !== undefined) {\r\n            return (\r\n                stateShortName.map(state => '|' + ' ' + state.abbreviation + ' ' + '|')\r\n            )\r\n        }else{\r\n            return null\r\n        }\r\n    };\r\n\r\n    let dublicateFinder = (phone, email, index) => {\r\n        let duplicatePhone = props.file.findIndex(element => element.data.['Phone'] === phone);\r\n\r\n        let duplicateEmail = props.file.findIndex(element => element.data.['Email'].toLowerCase() === email.toLowerCase());\r\n\r\n        if (duplicatePhone === index && duplicateEmail === index) {\r\n            return null\r\n        } else {\r\n            if (duplicatePhone === index && duplicateEmail !== index) {\r\n                return duplicateEmail + 1\r\n            } else {\r\n                if (duplicatePhone !== index && duplicateEmail === index) {\r\n                    return duplicatePhone + 1\r\n                } else {\r\n                    if (duplicatePhone !== index && duplicateEmail !== index) {\r\n                        if (duplicatePhone > duplicateEmail) {\r\n                            return duplicateEmail + 1\r\n                        } else {\r\n                            return duplicatePhone + 1\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <table>\r\n            <tr className='table--header'>\r\n                <th><b>Id</b></th>\r\n                {Object.keys(props.file[0].data).map((element) => {\r\n                    return (\r\n                        <th><b>{element}</b></th>\r\n                    )\r\n                })}\r\n                <th><b>Duplicate with</b></th>\r\n            </tr>\r\n            {props.file.map((person, index) => {\r\n                id = id+1;\r\n                return (\r\n                    <tr className={tableStyle(id)}>\r\n                        <td>{id}</td>\r\n                        <td>\r\n                            {person.data['Full Name'].trim()}\r\n                        </td>\r\n                        <td>\r\n                            {phoneFormat(person.data['Phone'])}\r\n                        </td>\r\n                        <td>\r\n                            {person.data['Email']}\r\n                        </td>\r\n                        <td className={ageValidation(parseFloat(person.data['Age'].replace(',', '.')))}>\r\n                            {person.data['Age']}\r\n                        </td>\r\n                        <td className={experienceValidation(person.data['Experience'], person.data['Age'])}>\r\n                            {person.data['Experience']}\r\n                        </td>\r\n                        <td className={incomeValidation(person.data['Yearly Income'])}>\r\n                            {(Math.round(person.data['Yearly Income'] * 100) / 100).toFixed(2)}\r\n                        </td>\r\n                        <td className={hasChildrenValidation(person.data['Has children'])}>\r\n                            {hasChildrenContent(person.data['Has children'])}\r\n                        </td>\r\n                        <td>\r\n                            {states(person.data['License states'])}\r\n                        </td>\r\n                        <td className={licDateValidation(person.data['Expiration date'])}>\r\n                            {person.data['Expiration date']}\r\n                        </td>\r\n                        <td className={licNumberValidation(person.data['License number'])}>\r\n                            {person.data['License number']}\r\n                        </td>\r\n                        <td>\r\n                            {dublicateFinder(person.data['Phone'], person.data['Email'], index)}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n        </table>\r\n    )\r\n};\r\n\r\nexport default TableRender;","import './App.css';\nimport 'antd/dist/antd.css';\nimport React, { useState } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport { Modal } from 'antd';\nimport TableRender from './tableRender'\n\nfunction App() {\n    let [file, setFile] = useState(undefined);\n\n    let [uploadingStatus, setUploadingStatus] = useState(false);\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n        if (\n            (uploadingStatus && (file.some(element => element.data.['Full Name'] === ''))) ||\n            (uploadingStatus && (file.some(element => element.data.['Phone'] === ''))) ||\n            (uploadingStatus && (file.some(element => element.data.['Email'] === '')))\n        ) {\n            setIsModalVisible(true);\n        }\n    };\n\n    const handleOk = () => {\n        setIsModalVisible(false);\n        setUploadingStatus(uploadingStatus = false);\n        setFile(undefined);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n        setUploadingStatus(uploadingStatus = false);\n        setFile(undefined);\n    };\n\n    let handleCsvFile = (data) => {\n        setFile(file = data);\n        setUploadingStatus(uploadingStatus = true);\n        console.log(\"fileCSVReader\", file);\n        showModal();\n    };\n\n    let handleOnError = (err, file, inputElem, reason) => {\n        console.log(err)\n    };\n\n    let handleOnRemoveFile = (data) => {\n        console.log('---------------------------')\n        console.log(data);\n        setUploadingStatus(uploadingStatus = false);\n        setFile(file = undefined);\n        console.log('---------------------------')\n    };\n\n    return (\n        <div className=\"App\">\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n                <p>File is incorect</p>\n            </Modal>\n            <CSVReader\n                config={{\n                    header: true,\n                    skipEmptyLines: true\n                }}\n                onDrop={(data) => {handleCsvFile(data)}}\n                onError={() => {handleOnError()}}\n                addRemoveButton\n                removeButtonColor='#659cef'\n                onRemoveFile={() => {handleOnRemoveFile()}}\n            >\n                <span>Drop CSV file here or click to upload.</span>\n            </CSVReader>\n            {uploadingStatus ? (<TableRender file={file} />) : (null) }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}